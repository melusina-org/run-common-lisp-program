name: 'Continuous Integration'
on:
  workflow_dispatch:
  push:
    branches-ignore:
      - v1
    tags-ignore:
      - v1.*

jobs:
  exercise-on-tier-1-platforms:
    strategy:
      matrix:
        implementation: ['sbcl']
        os: ['ubuntu-latest', 'macos-latest']
    runs-on: '${{ matrix.os }}'
    name: 'Exercise on Tier 1 Platform'
    steps:
      - uses: actions/checkout@v3
      - name: 'Install MacPorts'
        if: runner.os == 'macOS'
        uses: melusina-org/setup-macports@v1
      - uses: melusina-org/setup-common-lisp@v1
        with:
          implementation: '${{ matrix.implementation }}'
      - uses: melusina-org/setup-quicklisp@v1
        with:
          implementation: '${{ matrix.implementation }}'
      - name: 'Run a failing program'
        id: failing-program
        continue-on-error: true
        uses: ./
        with:
          implementation: '${{ matrix.implementation }}'
          system: 'org.melusina.github-action.run-common-lisp-program'
          entrypoint: 'fail'
      - name: 'Ensure a failing program yields failure'
        shell: sh
        run: |
          test '${{ steps.failing-program.outcome }}' = 'failure'
      - name: 'Run a missing system'
        id: missing-system
        continue-on-error: true
        uses: ./
        with:
          implementation: '${{ matrix.implementation }}'
          system: 'org.melusina.non-existent'
          entrypoint: 'non-existent'
      - name: 'Ensure a missing system yields failure'
        shell: sh
        run: |
          test '${{ steps.missing-system.outcome }}' = 'failure'
      - name: 'Run a successful program'
        id: successful-program
        continue-on-error: true
        uses: ./
        with:
          implementation: '${{ matrix.implementation }}'
          system: 'org.melusina.github-action.run-common-lisp-program'
          entrypoint: 'succeed'
      - name: 'Ensure a successful program yields success'
        shell: sh
        run: |
          test '${{ steps.successful-program.outcome }}' = 'success'
          
  exercise-on-tier-2-platforms:
    needs: exercise-on-tier-1-platforms
    strategy:
      matrix:
        implementation: ['abcl', 'clisp', 'ecl', 'gcl']
        os: ['ubuntu-latest', 'macos-latest']
    runs-on: '${{ matrix.os }}'
    name: 'Exercise on Tier 2 Platform'
    steps:
      - uses: actions/checkout@v3
      - name: 'Install MacPorts'
        if: runner.os == 'macOS'
        uses: melusina-org/setup-macports@v1
      - uses: melusina-org/setup-common-lisp@v1
        continue-on-error: true
        with:
          implementation: '${{ matrix.implementation }}'
      - uses: melusina-org/setup-quicklisp@v1
        continue-on-error: true
        with:
          implementation: '${{ matrix.implementation }}'
      - uses: ./
        continue-on-error: true
        with:
          implementation: '${{ matrix.implementation }}'
          system: 'uiop'
          entrypoint: 'quit'
